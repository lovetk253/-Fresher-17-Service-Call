/*
 * Created on 2018-09-26 ( Date ISO 2018-09-26 - Time 17:15:51 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package org.demo.service;

import java.util.List;

import javax.transaction.Transactional;

import org.demo.entity.ServiceRequestActions;
import org.demo.repository.ServiceRequestActionsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class ServiceRequestActionsServiceImpl implements ServiceRequestActionsService {

	@Autowired
	private ServiceRequestActionsRepository serviceRequestActionsRepository;

	@Override
	public ServiceRequestActions getOne(Integer responseId) {
		return serviceRequestActionsRepository.getOne(responseId);
	}

	@Override
	public Boolean delete(Integer responseId) {
		if (serviceRequestActionsRepository.getOne(responseId) != null) {
			serviceRequestActionsRepository.deleteById(responseId);
			return true;
		}
		return false;
	}

	@Override
	public ServiceRequestActions create(ServiceRequestActions serviceRequestActions) {
		return serviceRequestActionsRepository.save(serviceRequestActions);
	}

	@Override
	public ServiceRequestActions update(ServiceRequestActions serviceRequestActionsToUpdate) {
		ServiceRequestActions serviceRequestActions = serviceRequestActionsRepository
				.getOne(serviceRequestActionsToUpdate.getResponseId());

		if (serviceRequestActionsToUpdate.getResponseDatetime() != null) {

		}
		if (serviceRequestActionsToUpdate.getCallId() != null) {

		}
		if (serviceRequestActionsToUpdate.getActionCode() != null) {

		}
		if (serviceRequestActionsToUpdate.getOutcomeCode() != null) {

		}
		if (serviceRequestActionsToUpdate.getTechnicianId() != null) {

		}
		return serviceRequestActionsRepository.save(serviceRequestActions);
	}

	@Override
	public Boolean exist(ServiceRequestActions serviceRequestActions) {
		return serviceRequestActionsRepository.existsById(serviceRequestActions.getResponseId());
	}

	@Override
	public List<ServiceRequestActions> findAll() {
		return serviceRequestActionsRepository.findAll();
	}

}
