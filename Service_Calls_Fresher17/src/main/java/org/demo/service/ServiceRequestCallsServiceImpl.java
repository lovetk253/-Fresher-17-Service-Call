/*
 * Created on 2018-09-26 ( Date ISO 2018-09-26 - Time 17:15:51 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package org.demo.service;



import java.util.List;

import javax.transaction.Transactional;

import org.demo.entity.ServiceRequestCalls;
import org.demo.repository.ServiceRequestCallsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class ServiceRequestCallsServiceImpl implements ServiceRequestCallsService {

	@Autowired
	private ServiceRequestCallsRepository serviceRequestCallsRepository;

	@Override
	public ServiceRequestCalls getOne(Integer callId) {
		return serviceRequestCallsRepository.getOne(callId);
	}

	@Override
	public Boolean delete(Integer callId) {
		if (serviceRequestCallsRepository.getOne(callId) != null) {
			serviceRequestCallsRepository.deleteById(callId);
			return true;
		}
		return false;
	}

	@Override
	public ServiceRequestCalls create(ServiceRequestCalls serviceRequestCalls) {
		return serviceRequestCallsRepository.save(serviceRequestCalls);
	}

	@Override
	public ServiceRequestCalls update(ServiceRequestCalls serviceRequestCallsToUpdate) {
						ServiceRequestCalls serviceRequestCalls = serviceRequestCallsRepository.getOne(serviceRequestCallsToUpdate.getCallId());
																														
				if(serviceRequestCallsToUpdate.getDateTimeOfCall() !=null) {
			
		}
				if(serviceRequestCallsToUpdate.getOtherDetails() !=null) {
			
		}
				if(serviceRequestCallsToUpdate.getContactId() !=null) {
			
		}
				if(serviceRequestCallsToUpdate.getChargeCode() !=null) {
			
		}
				if(serviceRequestCallsToUpdate.getStatusCode() !=null) {
			
		}
				if(serviceRequestCallsToUpdate.getProblemCode() !=null) {
			
		}
				return serviceRequestCallsRepository.save(serviceRequestCalls);
	}

	@Override
	public Boolean exist(ServiceRequestCalls serviceRequestCalls) {
						return serviceRequestCallsRepository.existsById(serviceRequestCalls.getCallId());
																													}

	@Override
	public List<ServiceRequestCalls> findAll() {
		return serviceRequestCallsRepository.findAll();
	}

}

