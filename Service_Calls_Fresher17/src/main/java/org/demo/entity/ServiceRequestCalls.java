/*
 * Created on 2018-09-26 ( Date ISO 2018-09-26 - Time 17:15:51 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package org.demo.entity;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.*;

/**
 * Persistent class for ServiceRequestCalls entity stored in table Service_Request_Calls.
 * This class is a "record entity" without JPA links.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
@Entity
@Table(name="Service_Request_Calls", catalog="db_assigment" )
public class ServiceRequestCalls implements Serializable {

	private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="Call_ID", nullable=false)
    private Integer callId ; 
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Date_Time_of_Call")
    private Date dateTimeOfCall ;     @Column(name="Other_Details", length=45)
    private String otherDetails ;     @Column(name="Contact_ID", nullable=false)
    private Integer contactId ; // Foreign Key     @Column(name="Charge_Code", nullable=false)
    private Integer chargeCode ; // Foreign Key     @Column(name="Status_Code", nullable=false)
    private Integer statusCode ; // Foreign Key     @Column(name="Problem_Code", nullable=false)
    private Integer problemCode ; // Foreign Key 

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ServiceRequestCalls() {
		super();
    }

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
	public void setCallId(Integer callId) {
        this.callId = callId ;
    }
	public Integer getCallId() {
        return this.callId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
	//--- DATABASE MAPPING : Date_Time_of_Call (DATETIME) 
	public void setDateTimeOfCall(Date dateTimeOfCall) {this.dateTimeOfCall = dateTimeOfCall;}
	public Date getDateTimeOfCall() {return this.dateTimeOfCall;}

	//--- DATABASE MAPPING : Other_Details (VARCHAR) 
	public void setOtherDetails(String otherDetails) {this.otherDetails = otherDetails;}
	public String getOtherDetails() {return this.otherDetails;}

	//--- DATABASE MAPPING : Contact_ID (INT) 
	public void setContactId(Integer contactId) {this.contactId = contactId;}
	public Integer getContactId() {return this.contactId;}

	//--- DATABASE MAPPING : Charge_Code (INT) 
	public void setChargeCode(Integer chargeCode) {this.chargeCode = chargeCode;}
	public Integer getChargeCode() {return this.chargeCode;}

	//--- DATABASE MAPPING : Status_Code (INT) 
	public void setStatusCode(Integer statusCode) {this.statusCode = statusCode;}
	public Integer getStatusCode() {return this.statusCode;}

	//--- DATABASE MAPPING : Problem_Code (INT) 
	public void setProblemCode(Integer problemCode) {this.problemCode = problemCode;}
	public Integer getProblemCode() {return this.problemCode;}


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
 	public String toString() {
		StringBuilder sb = new StringBuilder(); 
		sb.append(callId); 
		sb.append(dateTimeOfCall); 
		sb.append("|"); 
		sb.append(otherDetails); 
		sb.append("|"); 
		sb.append(contactId); 
		sb.append("|"); 
		sb.append(chargeCode); 
		sb.append("|"); 
		sb.append(statusCode); 
		sb.append("|"); 
		sb.append(problemCode); 
        return sb.toString();
    }
}